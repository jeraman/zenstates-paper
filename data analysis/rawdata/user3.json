[{"selectedanswer":"osc_slow_wait_osc_fast","rightanswer":"osc_slow_wait_osc_fast","videotime":49.77,"durationtime":183.35,"block":"pde","trial":1,"id":"P4","beginTimestamp":"2017-09-04 14:49:06","endTimestamp":"2017-09-04 15:35:39","age":23,"experience":4,"gender":"Male","language":"Max/MSP","presentationOrder":"CBA","easier":"ZenStates","easierwhy":"All of the low level details are completely abstracted away, and all that's left is uncomplicated english language descriptions of the different states, and a flow chart documenting how to transition between them. While there is some programming/code jargon (e.g. $state.timer > 2) it is mostly plain language. You do not have to extrapolate the behaviour from the manipulation of variables or the flow of data, the model simply describes the behaviour. However, it is worth noting that by the time I arrived at the third model, I already knew all of the possible behaviours. Perhaps if I had had to understand the behaviours as well as identify them this may have led to a different experience.","harder":"Dataflow","harderwhy":"This model involved the low level mathematical detail, e.g. deriving a rising ramp from the current time using \"millis()%1000\", or deriving a slow oscillating variable using \"Math.sin(2*pi*frequency*time)\". It was also more challenging because I had to actually figure out what behaviour the code was causing, whereas in the other models I merely had to identify the behaviours, since they were the same as in the first model."},{"selectedanswer":"random_flickering_wait_silence","rightanswer":"random_flickering_wait_silence","videotime":17.24,"durationtime":60.59,"block":"pde","trial":2,"id":"P4","beginTimestamp":"2017-09-04 14:49:06","endTimestamp":"2017-09-04 15:35:39","age":23,"experience":4,"gender":"Male","language":"Max/MSP","presentationOrder":"CBA","easier":"ZenStates","easierwhy":"All of the low level details are completely abstracted away, and all that's left is uncomplicated english language descriptions of the different states, and a flow chart documenting how to transition between them. While there is some programming/code jargon (e.g. $state.timer > 2) it is mostly plain language. You do not have to extrapolate the behaviour from the manipulation of variables or the flow of data, the model simply describes the behaviour. However, it is worth noting that by the time I arrived at the third model, I already knew all of the possible behaviours. Perhaps if I had had to understand the behaviours as well as identify them this may have led to a different experience.","harder":"Dataflow","harderwhy":"This model involved the low level mathematical detail, e.g. deriving a rising ramp from the current time using \"millis()%1000\", or deriving a slow oscillating variable using \"Math.sin(2*pi*frequency*time)\". It was also more challenging because I had to actually figure out what behaviour the code was causing, whereas in the other models I merely had to identify the behaviours, since they were the same as in the first model."},{"selectedanswer":"mouseXY_RGB_keypress_osc_slow_fast","rightanswer":"mouseXY_RGB_keypress_osc_slow_fast","videotime":31.12,"durationtime":123.73,"block":"pde","trial":3,"id":"P4","beginTimestamp":"2017-09-04 14:49:06","endTimestamp":"2017-09-04 15:35:39","age":23,"experience":4,"gender":"Male","language":"Max/MSP","presentationOrder":"CBA","easier":"ZenStates","easierwhy":"All of the low level details are completely abstracted away, and all that's left is uncomplicated english language descriptions of the different states, and a flow chart documenting how to transition between them. While there is some programming/code jargon (e.g. $state.timer > 2) it is mostly plain language. You do not have to extrapolate the behaviour from the manipulation of variables or the flow of data, the model simply describes the behaviour. However, it is worth noting that by the time I arrived at the third model, I already knew all of the possible behaviours. Perhaps if I had had to understand the behaviours as well as identify them this may have led to a different experience.","harder":"Dataflow","harderwhy":"This model involved the low level mathematical detail, e.g. deriving a rising ramp from the current time using \"millis()%1000\", or deriving a slow oscillating variable using \"Math.sin(2*pi*frequency*time)\". It was also more challenging because I had to actually figure out what behaviour the code was causing, whereas in the other models I merely had to identify the behaviours, since they were the same as in the first model."},{"selectedanswer":"ramp_off_random_wait_ramp_in","rightanswer":"ramp_off_random_wait_ramp_in","videotime":15.96,"durationtime":110.65,"block":"pde","trial":4,"id":"P4","beginTimestamp":"2017-09-04 14:49:06","endTimestamp":"2017-09-04 15:35:39","age":23,"experience":4,"gender":"Male","language":"Max/MSP","presentationOrder":"CBA","easier":"ZenStates","easierwhy":"All of the low level details are completely abstracted away, and all that's left is uncomplicated english language descriptions of the different states, and a flow chart documenting how to transition between them. While there is some programming/code jargon (e.g. $state.timer > 2) it is mostly plain language. You do not have to extrapolate the behaviour from the manipulation of variables or the flow of data, the model simply describes the behaviour. However, it is worth noting that by the time I arrived at the third model, I already knew all of the possible behaviours. Perhaps if I had had to understand the behaviours as well as identify them this may have led to a different experience.","harder":"Dataflow","harderwhy":"This model involved the low level mathematical detail, e.g. deriving a rising ramp from the current time using \"millis()%1000\", or deriving a slow oscillating variable using \"Math.sin(2*pi*frequency*time)\". It was also more challenging because I had to actually figure out what behaviour the code was causing, whereas in the other models I merely had to identify the behaviours, since they were the same as in the first model."},{"selectedanswer":"simple_random","rightanswer":"simple_random","videotime":17.17,"durationtime":32.54,"block":"pde","trial":5,"id":"P4","beginTimestamp":"2017-09-04 14:49:06","endTimestamp":"2017-09-04 15:35:39","age":23,"experience":4,"gender":"Male","language":"Max/MSP","presentationOrder":"CBA","easier":"ZenStates","easierwhy":"All of the low level details are completely abstracted away, and all that's left is uncomplicated english language descriptions of the different states, and a flow chart documenting how to transition between them. While there is some programming/code jargon (e.g. $state.timer > 2) it is mostly plain language. You do not have to extrapolate the behaviour from the manipulation of variables or the flow of data, the model simply describes the behaviour. However, it is worth noting that by the time I arrived at the third model, I already knew all of the possible behaviours. Perhaps if I had had to understand the behaviours as well as identify them this may have led to a different experience.","harder":"Dataflow","harderwhy":"This model involved the low level mathematical detail, e.g. deriving a rising ramp from the current time using \"millis()%1000\", or deriving a slow oscillating variable using \"Math.sin(2*pi*frequency*time)\". It was also more challenging because I had to actually figure out what behaviour the code was causing, whereas in the other models I merely had to identify the behaviours, since they were the same as in the first model."},{"selectedanswer":"mouseclick_random","rightanswer":"mouseclick_random","videotime":23.42,"durationtime":40.2,"block":"pde","trial":6,"id":"P4","beginTimestamp":"2017-09-04 14:49:06","endTimestamp":"2017-09-04 15:35:39","age":23,"experience":4,"gender":"Male","language":"Max/MSP","presentationOrder":"CBA","easier":"ZenStates","easierwhy":"All of the low level details are completely abstracted away, and all that's left is uncomplicated english language descriptions of the different states, and a flow chart documenting how to transition between them. While there is some programming/code jargon (e.g. $state.timer > 2) it is mostly plain language. You do not have to extrapolate the behaviour from the manipulation of variables or the flow of data, the model simply describes the behaviour. However, it is worth noting that by the time I arrived at the third model, I already knew all of the possible behaviours. Perhaps if I had had to understand the behaviours as well as identify them this may have led to a different experience.","harder":"Dataflow","harderwhy":"This model involved the low level mathematical detail, e.g. deriving a rising ramp from the current time using \"millis()%1000\", or deriving a slow oscillating variable using \"Math.sin(2*pi*frequency*time)\". It was also more challenging because I had to actually figure out what behaviour the code was causing, whereas in the other models I merely had to identify the behaviours, since they were the same as in the first model."},{"selectedanswer":"ramp_off_random_wait_ramp_in","rightanswer":"ramp_off_random_wait_ramp_in","videotime":25.02,"durationtime":92.7,"block":"pd","trial":1,"id":"P4","beginTimestamp":"2017-09-04 14:49:06","endTimestamp":"2017-09-04 15:35:39","age":23,"experience":4,"gender":"Male","language":"Max/MSP","presentationOrder":"CBA","easier":"ZenStates","easierwhy":"All of the low level details are completely abstracted away, and all that's left is uncomplicated english language descriptions of the different states, and a flow chart documenting how to transition between them. While there is some programming/code jargon (e.g. $state.timer > 2) it is mostly plain language. You do not have to extrapolate the behaviour from the manipulation of variables or the flow of data, the model simply describes the behaviour. However, it is worth noting that by the time I arrived at the third model, I already knew all of the possible behaviours. Perhaps if I had had to understand the behaviours as well as identify them this may have led to a different experience.","harder":"Dataflow","harderwhy":"This model involved the low level mathematical detail, e.g. deriving a rising ramp from the current time using \"millis()%1000\", or deriving a slow oscillating variable using \"Math.sin(2*pi*frequency*time)\". It was also more challenging because I had to actually figure out what behaviour the code was causing, whereas in the other models I merely had to identify the behaviours, since they were the same as in the first model."},{"selectedanswer":"keypress_chageRGB_mouseX_flickering_opacity","rightanswer":"keypress_chageRGB_mouseX_flickering_opacity","videotime":10.29,"durationtime":40.93,"block":"pd","trial":2,"id":"P4","beginTimestamp":"2017-09-04 14:49:06","endTimestamp":"2017-09-04 15:35:39","age":23,"experience":4,"gender":"Male","language":"Max/MSP","presentationOrder":"CBA","easier":"ZenStates","easierwhy":"All of the low level details are completely abstracted away, and all that's left is uncomplicated english language descriptions of the different states, and a flow chart documenting how to transition between them. While there is some programming/code jargon (e.g. $state.timer > 2) it is mostly plain language. You do not have to extrapolate the behaviour from the manipulation of variables or the flow of data, the model simply describes the behaviour. However, it is worth noting that by the time I arrived at the third model, I already knew all of the possible behaviours. Perhaps if I had had to understand the behaviours as well as identify them this may have led to a different experience.","harder":"Dataflow","harderwhy":"This model involved the low level mathematical detail, e.g. deriving a rising ramp from the current time using \"millis()%1000\", or deriving a slow oscillating variable using \"Math.sin(2*pi*frequency*time)\". It was also more challenging because I had to actually figure out what behaviour the code was causing, whereas in the other models I merely had to identify the behaviours, since they were the same as in the first model."},{"selectedanswer":"backward_ramp","rightanswer":"backward_ramp","videotime":18.39,"durationtime":36.02,"block":"pd","trial":3,"id":"P4","beginTimestamp":"2017-09-04 14:49:06","endTimestamp":"2017-09-04 15:35:39","age":23,"experience":4,"gender":"Male","language":"Max/MSP","presentationOrder":"CBA","easier":"ZenStates","easierwhy":"All of the low level details are completely abstracted away, and all that's left is uncomplicated english language descriptions of the different states, and a flow chart documenting how to transition between them. While there is some programming/code jargon (e.g. $state.timer > 2) it is mostly plain language. You do not have to extrapolate the behaviour from the manipulation of variables or the flow of data, the model simply describes the behaviour. However, it is worth noting that by the time I arrived at the third model, I already knew all of the possible behaviours. Perhaps if I had had to understand the behaviours as well as identify them this may have led to a different experience.","harder":"Dataflow","harderwhy":"This model involved the low level mathematical detail, e.g. deriving a rising ramp from the current time using \"millis()%1000\", or deriving a slow oscillating variable using \"Math.sin(2*pi*frequency*time)\". It was also more challenging because I had to actually figure out what behaviour the code was causing, whereas in the other models I merely had to identify the behaviours, since they were the same as in the first model."},{"selectedanswer":"mouseclick_random","rightanswer":"mouseclick_random","videotime":7.22,"durationtime":21.03,"block":"pd","trial":4,"id":"P4","beginTimestamp":"2017-09-04 14:49:06","endTimestamp":"2017-09-04 15:35:39","age":23,"experience":4,"gender":"Male","language":"Max/MSP","presentationOrder":"CBA","easier":"ZenStates","easierwhy":"All of the low level details are completely abstracted away, and all that's left is uncomplicated english language descriptions of the different states, and a flow chart documenting how to transition between them. While there is some programming/code jargon (e.g. $state.timer > 2) it is mostly plain language. You do not have to extrapolate the behaviour from the manipulation of variables or the flow of data, the model simply describes the behaviour. However, it is worth noting that by the time I arrived at the third model, I already knew all of the possible behaviours. Perhaps if I had had to understand the behaviours as well as identify them this may have led to a different experience.","harder":"Dataflow","harderwhy":"This model involved the low level mathematical detail, e.g. deriving a rising ramp from the current time using \"millis()%1000\", or deriving a slow oscillating variable using \"Math.sin(2*pi*frequency*time)\". It was also more challenging because I had to actually figure out what behaviour the code was causing, whereas in the other models I merely had to identify the behaviours, since they were the same as in the first model."},{"selectedanswer":"mouseXY_RGB_keypress_osc_slow_fast","rightanswer":"mouseXY_RGB_keypress_osc_slow_fast","videotime":23.59,"durationtime":59.04,"block":"pd","trial":5,"id":"P4","beginTimestamp":"2017-09-04 14:49:06","endTimestamp":"2017-09-04 15:35:39","age":23,"experience":4,"gender":"Male","language":"Max/MSP","presentationOrder":"CBA","easier":"ZenStates","easierwhy":"All of the low level details are completely abstracted away, and all that's left is uncomplicated english language descriptions of the different states, and a flow chart documenting how to transition between them. While there is some programming/code jargon (e.g. $state.timer > 2) it is mostly plain language. You do not have to extrapolate the behaviour from the manipulation of variables or the flow of data, the model simply describes the behaviour. However, it is worth noting that by the time I arrived at the third model, I already knew all of the possible behaviours. Perhaps if I had had to understand the behaviours as well as identify them this may have led to a different experience.","harder":"Dataflow","harderwhy":"This model involved the low level mathematical detail, e.g. deriving a rising ramp from the current time using \"millis()%1000\", or deriving a slow oscillating variable using \"Math.sin(2*pi*frequency*time)\". It was also more challenging because I had to actually figure out what behaviour the code was causing, whereas in the other models I merely had to identify the behaviours, since they were the same as in the first model."},{"selectedanswer":"osc_slow_wait_osc_fast","rightanswer":"osc_slow_wait_osc_fast","videotime":11.23,"durationtime":36.7,"block":"pd","trial":6,"id":"P4","beginTimestamp":"2017-09-04 14:49:06","endTimestamp":"2017-09-04 15:35:39","age":23,"experience":4,"gender":"Male","language":"Max/MSP","presentationOrder":"CBA","easier":"ZenStates","easierwhy":"All of the low level details are completely abstracted away, and all that's left is uncomplicated english language descriptions of the different states, and a flow chart documenting how to transition between them. While there is some programming/code jargon (e.g. $state.timer > 2) it is mostly plain language. You do not have to extrapolate the behaviour from the manipulation of variables or the flow of data, the model simply describes the behaviour. However, it is worth noting that by the time I arrived at the third model, I already knew all of the possible behaviours. Perhaps if I had had to understand the behaviours as well as identify them this may have led to a different experience.","harder":"Dataflow","harderwhy":"This model involved the low level mathematical detail, e.g. deriving a rising ramp from the current time using \"millis()%1000\", or deriving a slow oscillating variable using \"Math.sin(2*pi*frequency*time)\". It was also more challenging because I had to actually figure out what behaviour the code was causing, whereas in the other models I merely had to identify the behaviours, since they were the same as in the first model."},{"selectedanswer":"keypress_chageRGB_mouseX_flickering_opacity","rightanswer":"keypress_chageRGB_mouseX_flickering_opacity","videotime":9.33,"durationtime":19.74,"block":"zen","trial":1,"id":"P4","beginTimestamp":"2017-09-04 14:49:06","endTimestamp":"2017-09-04 15:35:39","age":23,"experience":4,"gender":"Male","language":"Max/MSP","presentationOrder":"CBA","easier":"ZenStates","easierwhy":"All of the low level details are completely abstracted away, and all that's left is uncomplicated english language descriptions of the different states, and a flow chart documenting how to transition between them. While there is some programming/code jargon (e.g. $state.timer > 2) it is mostly plain language. You do not have to extrapolate the behaviour from the manipulation of variables or the flow of data, the model simply describes the behaviour. However, it is worth noting that by the time I arrived at the third model, I already knew all of the possible behaviours. Perhaps if I had had to understand the behaviours as well as identify them this may have led to a different experience.","harder":"Dataflow","harderwhy":"This model involved the low level mathematical detail, e.g. deriving a rising ramp from the current time using \"millis()%1000\", or deriving a slow oscillating variable using \"Math.sin(2*pi*frequency*time)\". It was also more challenging because I had to actually figure out what behaviour the code was causing, whereas in the other models I merely had to identify the behaviours, since they were the same as in the first model."},{"selectedanswer":"ramp_off_random_wait_ramp_in","rightanswer":"ramp_off_random_wait_ramp_in","videotime":18.53,"durationtime":41.7,"block":"zen","trial":2,"id":"P4","beginTimestamp":"2017-09-04 14:49:06","endTimestamp":"2017-09-04 15:35:39","age":23,"experience":4,"gender":"Male","language":"Max/MSP","presentationOrder":"CBA","easier":"ZenStates","easierwhy":"All of the low level details are completely abstracted away, and all that's left is uncomplicated english language descriptions of the different states, and a flow chart documenting how to transition between them. While there is some programming/code jargon (e.g. $state.timer > 2) it is mostly plain language. You do not have to extrapolate the behaviour from the manipulation of variables or the flow of data, the model simply describes the behaviour. However, it is worth noting that by the time I arrived at the third model, I already knew all of the possible behaviours. Perhaps if I had had to understand the behaviours as well as identify them this may have led to a different experience.","harder":"Dataflow","harderwhy":"This model involved the low level mathematical detail, e.g. deriving a rising ramp from the current time using \"millis()%1000\", or deriving a slow oscillating variable using \"Math.sin(2*pi*frequency*time)\". It was also more challenging because I had to actually figure out what behaviour the code was causing, whereas in the other models I merely had to identify the behaviours, since they were the same as in the first model."},{"selectedanswer":"backward_ramp","rightanswer":"backward_ramp","videotime":16.23,"durationtime":31.14,"block":"zen","trial":3,"id":"P4","beginTimestamp":"2017-09-04 14:49:06","endTimestamp":"2017-09-04 15:35:39","age":23,"experience":4,"gender":"Male","language":"Max/MSP","presentationOrder":"CBA","easier":"ZenStates","easierwhy":"All of the low level details are completely abstracted away, and all that's left is uncomplicated english language descriptions of the different states, and a flow chart documenting how to transition between them. While there is some programming/code jargon (e.g. $state.timer > 2) it is mostly plain language. You do not have to extrapolate the behaviour from the manipulation of variables or the flow of data, the model simply describes the behaviour. However, it is worth noting that by the time I arrived at the third model, I already knew all of the possible behaviours. Perhaps if I had had to understand the behaviours as well as identify them this may have led to a different experience.","harder":"Dataflow","harderwhy":"This model involved the low level mathematical detail, e.g. deriving a rising ramp from the current time using \"millis()%1000\", or deriving a slow oscillating variable using \"Math.sin(2*pi*frequency*time)\". It was also more challenging because I had to actually figure out what behaviour the code was causing, whereas in the other models I merely had to identify the behaviours, since they were the same as in the first model."},{"selectedanswer":"mouseclick_random","rightanswer":"mouseclick_random","videotime":17.51,"durationtime":67.66,"block":"zen","trial":4,"id":"P4","beginTimestamp":"2017-09-04 14:49:06","endTimestamp":"2017-09-04 15:35:39","age":23,"experience":4,"gender":"Male","language":"Max/MSP","presentationOrder":"CBA","easier":"ZenStates","easierwhy":"All of the low level details are completely abstracted away, and all that's left is uncomplicated english language descriptions of the different states, and a flow chart documenting how to transition between them. While there is some programming/code jargon (e.g. $state.timer > 2) it is mostly plain language. You do not have to extrapolate the behaviour from the manipulation of variables or the flow of data, the model simply describes the behaviour. However, it is worth noting that by the time I arrived at the third model, I already knew all of the possible behaviours. Perhaps if I had had to understand the behaviours as well as identify them this may have led to a different experience.","harder":"Dataflow","harderwhy":"This model involved the low level mathematical detail, e.g. deriving a rising ramp from the current time using \"millis()%1000\", or deriving a slow oscillating variable using \"Math.sin(2*pi*frequency*time)\". It was also more challenging because I had to actually figure out what behaviour the code was causing, whereas in the other models I merely had to identify the behaviours, since they were the same as in the first model."},{"selectedanswer":"random_flickering_wait_silence","rightanswer":"random_flickering_wait_silence","videotime":17.49,"durationtime":42.86,"block":"zen","trial":5,"id":"P4","beginTimestamp":"2017-09-04 14:49:06","endTimestamp":"2017-09-04 15:35:39","age":23,"experience":4,"gender":"Male","language":"Max/MSP","presentationOrder":"CBA","easier":"ZenStates","easierwhy":"All of the low level details are completely abstracted away, and all that's left is uncomplicated english language descriptions of the different states, and a flow chart documenting how to transition between them. While there is some programming/code jargon (e.g. $state.timer > 2) it is mostly plain language. You do not have to extrapolate the behaviour from the manipulation of variables or the flow of data, the model simply describes the behaviour. However, it is worth noting that by the time I arrived at the third model, I already knew all of the possible behaviours. Perhaps if I had had to understand the behaviours as well as identify them this may have led to a different experience.","harder":"Dataflow","harderwhy":"This model involved the low level mathematical detail, e.g. deriving a rising ramp from the current time using \"millis()%1000\", or deriving a slow oscillating variable using \"Math.sin(2*pi*frequency*time)\". It was also more challenging because I had to actually figure out what behaviour the code was causing, whereas in the other models I merely had to identify the behaviours, since they were the same as in the first model."},{"selectedanswer":"mouseXY_RGB_keypress_osc_slow_fast","rightanswer":"mouseXY_RGB_keypress_osc_slow_fast","videotime":30.86,"durationtime":52.4,"block":"zen","trial":6,"id":"P4","beginTimestamp":"2017-09-04 14:49:06","endTimestamp":"2017-09-04 15:35:39","age":23,"experience":4,"gender":"Male","language":"Max/MSP","presentationOrder":"CBA","easier":"ZenStates","easierwhy":"All of the low level details are completely abstracted away, and all that's left is uncomplicated english language descriptions of the different states, and a flow chart documenting how to transition between them. While there is some programming/code jargon (e.g. $state.timer > 2) it is mostly plain language. You do not have to extrapolate the behaviour from the manipulation of variables or the flow of data, the model simply describes the behaviour. However, it is worth noting that by the time I arrived at the third model, I already knew all of the possible behaviours. Perhaps if I had had to understand the behaviours as well as identify them this may have led to a different experience.","harder":"Dataflow","harderwhy":"This model involved the low level mathematical detail, e.g. deriving a rising ramp from the current time using \"millis()%1000\", or deriving a slow oscillating variable using \"Math.sin(2*pi*frequency*time)\". It was also more challenging because I had to actually figure out what behaviour the code was causing, whereas in the other models I merely had to identify the behaviours, since they were the same as in the first model."}]
